{"version":3,"file":"static/js/movie-detalis-page.a6553afa.chunk.js","mappings":"4QAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACVF,IAAAA,IAAA,6CACiBC,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,GAAP,4FAAWC,EAAX,+BAAqB,GAArB,SACRR,IAAAA,IAAA,iBAAoBO,GAApB,OAAyBC,EAAzB,oBAA4CP,IADpC,cACzBE,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBK,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,gCACIC,EADJ,kBACoBS,IAFb,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,uD,+HCRd,SAASM,EAAT,GAAoC,EAARP,KAAS,IAC5CQ,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAWJ,EAASK,MAAMC,KAMhC,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAkBM,EAAOL,IAAIkB,MAAK,SAAAH,GAAK,OAAIC,EAASD,QACnD,CAACV,EAAOL,MAET,yBACGe,IACC,iCACE,mBAAQI,QAZD,WACbV,EAASE,IAWH,sBACA,iBAAKS,UAAU,mBAAf,WACE,gBACEC,IACEN,EAAMO,YACF,mCAAqCP,EAAMO,YAC3C,wDAENC,IAAKR,EAAMS,SAEb,iBAAKJ,UAAU,yBAAf,WACE,wBAAKL,EAAMU,kBACX,wCAAcV,EAAMW,iBACpB,uCACA,uBAAIX,EAAMY,YAEV,4BACE,yCACCZ,EAAMa,OAAOC,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAP,OAChB,uBAAaA,GAAL9B,gBAMhB,4BACE,oDACA,SAAC,KAAD,CAAS+B,GAAG,OAAOnB,MAAO,CAAEC,KAAMF,GAAYS,UAAU,UAAxD,mBAGA,SAAC,KAAD,CAASW,GAAG,UAAUnB,MAAO,CAAEC,KAAMF,GAAYS,UAAU,UAA3D,wBAIF,SAAC,KAAD","sources":["Services/ApiSerices.js","Views/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '718b7347396ac1052bb7bdc76b11dbfa';\n\nexport const FetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const FetchMovieDetails = async (id, options = '') => {\n  const response = await axios.get(`/movie/${id}${options}?api_key=${apiKey}`);\n\n  return response.data;\n};\n\nexport const FetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${apiKey}&query=${query}`\n  );\n\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { FetchMovieDetails } from 'Services/ApiSerices';\n\nexport default function MovieDetailsPage({ data }) {\n  const params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const prevPath = location.state.from;\n\n  const onBack = () => {\n    navigate(prevPath);\n  };\n\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    FetchMovieDetails(params.id).then(movie => setMovie(movie));\n  }, [params.id]);\n  return (\n    <div>\n      {movie && (\n        <>\n          <button onClick={onBack}>Go Back</button>\n          <div className=\"MovieDetailsInfo\">\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/` + movie.poster_path\n                  : 'https://static.thenounproject.com/png/3674270-200.png'\n              }\n              alt={movie.title}\n            />\n            <div className=\"MovieInfoTextContainer\">\n              <h2>{movie.original_title}</h2>\n              <p>{`Rating ${movie.vote_average}`}</p>\n              <h3>Owerview:</h3>\n              <p>{movie.overview}</p>\n\n              <div>\n                <strong>Ganres: </strong>\n                {movie.genres.map(({ id, name }) => (\n                  <p key={id}>{name}</p>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h2>Additional information</h2>\n            <NavLink to=\"cast\" state={{ from: prevPath }} className=\"NavLink\">\n              Cast\n            </NavLink>\n            <NavLink to=\"reviews\" state={{ from: prevPath }} className=\"NavLink\">\n              Review\n            </NavLink>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","apiKey","FetchTrendingMovies","response","data","results","FetchMovieDetails","id","options","FetchSearchMovie","query","MovieDetailsPage","params","useParams","location","useLocation","navigate","useNavigate","prevPath","state","from","useState","movie","setMovie","useEffect","then","onClick","className","src","poster_path","alt","title","original_title","vote_average","overview","genres","map","name","to"],"sourceRoot":""}