{"version":3,"file":"static/js/movies-page.5d623c2b.chunk.js","mappings":"4QAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACVF,IAAAA,IAAA,6CACiBC,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,GAAP,4FAAWC,EAAX,+BAAqB,GAArB,SACRR,IAAAA,IAAA,iBAAoBO,GAApB,OAAyBC,EAAzB,oBAA4CP,IADpC,cACzBE,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBK,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,gCACIC,EADJ,kBACoBS,IAFb,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,uD,wFCjBtB,SAASM,EAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MACzD,OACE,kBAAMC,SAAUF,EAAhB,WACE,kBAAOG,KAAK,OAAOC,SAAUL,EAAgBE,MAAOA,KACpD,mBAAQE,KAAK,SAAb,uB,qDCAS,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACJN,KACFf,EAAAA,EAAAA,IAAiBe,GAAOO,MAAK,SAAAC,GAAI,OAAIH,EAAUG,MAC/CL,EAASH,MAGV,CAACA,IAeJ,OACE,iCACE,SAACb,EAAD,CACEC,eAhBiB,SAAAqB,GACrBN,EAASM,EAAEC,OAAOpB,QAgBdD,aAbe,SAAAoB,GACE,KAAjBvB,EAAMyB,SAGVF,EAAEG,iBACFb,EAAgB,CAAEb,MAAAA,KAClBD,EAAAA,EAAAA,IAAiBC,GAAOqB,MAAK,SAAAC,GAAI,OAAIH,EAAUG,QAQ3ClB,MAAOJ,KAET,SAAC2B,EAAA,EAAD,CAAYjC,KAAMwB,EAAQU,MAAO,CAAEC,KAAMpB,U,qFCrChC,SAASkB,EAAT,GAA+B,IAATjC,EAAQ,EAARA,KAC7Be,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACGhB,IACC,wBACGA,EAAKoC,KAAI,SAAAC,GAAK,OACb,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAMlC,IAAM+B,MAAO,CAAEC,KAAMpB,GAAnD,SACGsB,EAAME,SAFFF,EAAMlC","sources":["Services/ApiSerices.js","components/SearchForm.js","Views/MoviesPage.js","components/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '718b7347396ac1052bb7bdc76b11dbfa';\n\nexport const FetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const FetchMovieDetails = async (id, options = '') => {\n  const response = await axios.get(`/movie/${id}${options}?api_key=${apiKey}`);\n\n  return response.data;\n};\n\nexport const FetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${apiKey}&query=${query}`\n  );\n\n  return response.data.results;\n};\n","import PropTypes from 'prop-types';\nexport function SearchForm({ handleSetQuery, handleSubmit, value }) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleSetQuery} value={value} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  handleSetQuery: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { SearchForm } from 'components/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { FetchSearchMovie } from 'Services/ApiSerices';\nimport MoviesList from 'components/MoviesList';\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const param = searchParams.get('query');\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (param) {\n      FetchSearchMovie(param).then(resp => setMovies(resp));\n      setQuery(param);\n    }\n    return;\n  }, [param]);\n\n  const handleSetQuery = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (query.trim() === '') {\n      return;\n    }\n    e.preventDefault();\n    setSearchParams({ query });\n    FetchSearchMovie(query).then(resp => setMovies(resp));\n  };\n\n  return (\n    <>\n      <SearchForm\n        handleSetQuery={handleSetQuery}\n        handleSubmit={handleSubmit}\n        value={query}\n      />\n      <MoviesList data={movies} state={{ from: location }} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ data }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      {data && (\n        <ul>\n          {data.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n"],"names":["axios","apiKey","FetchTrendingMovies","response","data","results","FetchMovieDetails","id","options","FetchSearchMovie","query","SearchForm","handleSetQuery","handleSubmit","value","onSubmit","type","onChange","MoviesPage","location","useLocation","useSearchParams","searchParams","setSearchParams","param","get","useState","setQuery","movies","setMovies","useEffect","then","resp","e","target","trim","preventDefault","MoviesList","state","from","map","movie","to","title"],"sourceRoot":""}