{"version":3,"file":"static/js/reviews.52870646.chunk.js","mappings":"4QAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACVF,IAAAA,IAAA,6CACiBC,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,GAAP,4FAAWC,EAAX,+BAAqB,GAArB,SACRR,IAAAA,IAAA,iBAAoBO,GAApB,OAAyBC,EAAzB,oBAA4CP,IADpC,cACzBE,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBK,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,IAAAA,IAAA,gCACIC,EADJ,kBACoBS,IAFb,cACxBP,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,uD,sHCdd,SAASM,EAAT,GAAgC,EAARP,KAAS,IACxCQ,GAASC,EAAAA,EAAAA,MAEf,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAkBM,EAAOL,GAAI,YAAYW,MAAK,SAAAC,GAAG,OAC/CH,EAAWG,EAAId,cAEhB,CAACO,EAAOL,MAGT,yBACGQ,GAAWA,EAAQK,QAClB,wBACGL,EAAQM,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WAEpB,uBAAID,EAAOE,YAHJF,EAAOf,UAQpB","sources":["Services/ApiSerices.js","components/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '718b7347396ac1052bb7bdc76b11dbfa';\n\nexport const FetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const FetchMovieDetails = async (id, options = '') => {\n  const response = await axios.get(`/movie/${id}${options}?api_key=${apiKey}`);\n\n  return response.data;\n};\n\nexport const FetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${apiKey}&query=${query}`\n  );\n\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchMovieDetails } from 'Services/ApiSerices';\n\nexport default function MovieReviews({ data }) {\n  const params = useParams();\n\n  const [reviews, setReviews] = useState();\n\n  useEffect(() => {\n    FetchMovieDetails(params.id, '/reviews').then(res =>\n      setReviews(res.results)\n    );\n  }, [params.id]);\n\n  return (\n    <div>\n      {reviews && reviews.length ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h2>Author: {review.author}</h2>\n\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>No Reviews</h2>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","apiKey","FetchTrendingMovies","response","data","results","FetchMovieDetails","id","options","FetchSearchMovie","query","MovieReviews","params","useParams","useState","reviews","setReviews","useEffect","then","res","length","map","review","author","content"],"sourceRoot":""}